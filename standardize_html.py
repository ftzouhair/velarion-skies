"import os\nimport re\n\n# Directory containing the HTML files\nhtml_dir = r\"C:\\Users\\ZZ\\Desktop\\velarion-skies\\velarion-skies-used\"\n\n# Correct head section template\ncorrect_head_template = '''<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n  <script>\n  (function(){\n    const key='theme';\n    const saved=localStorage.getItem(key);\n    const prefersDark=window.matchMedia('(prefers-color-scheme: dark)').matches;\n    const theme=saved || (prefersDark ? 'dark' : 'light');\n    document.documentElement.setAttribute('data-theme', theme);\n    document.documentElement.style.colorScheme = theme;\n  })();\n  </script>\n  <meta name=\"theme-color\" content=\"#FAFAFA\" id=\"meta-theme-color\">'''\n\n# Pattern to match the head section\nhead_pattern = re.compile(r'<head>.*?</head>', re.DOTALL)\n\n# Pattern to match existing meta theme-color tags\ntheme_color_pattern = re.compile(r'<meta name=\"theme-color\".*?>')\n\n# Pattern to match existing inline theme scripts\ninline_script_pattern = re.compile(r'<script>\\s*\\(function\\(\\)\\{.*?document\\.documentElement\\.setAttribute\\([^}]*?\\}\\)\\(\\);.*?</script>', re.DOTALL)\n\nfor filename in os.listdir(html_dir):\n    if filename.endswith(\".html\"):\n        filepath = os.path.join(html_dir, filename)\n        \n        with open(filepath, 'r', encoding='utf-8') as file:\n            content = file.read()\n        \n        # Remove existing theme-color meta tags\n        content = theme_color_pattern.sub('', content)\n        \n        # Remove existing inline theme scripts\n        content = inline_script_pattern.sub('', content)\n        \n        # Find and replace the head section with the correct implementation\n        def replace_head(match):\n            return correct_head_template + '\\n  <title>' + re.search(r'<title>(.*?)</title>', match.group(0)).group(1) + '</title>'\n        \n        content = head_pattern.sub(lambda m: correct_head_template + m.group(0)[m.group(0).find('<title>'):m.group(0).find('</head>')], content)\n        \n        with open(filepath, 'w', encoding='utf-8') as file:\n            file.write(content)\n        \n        print(f\"Updated {filename}\")\n\nprint(\"All HTML files have been standardized.\")"